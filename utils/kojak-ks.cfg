#version=DEVEL
auth --enableshadow --passalgo=sha512
url --url http://mirror.centos.org/centos/7/os/x86_64/
firstboot --disable
ignoredisk --only-use=vda
lang en_US.UTF-8
keyboard us
network --hostname=master.example.com --bootproto=static --ip=192.168.122.100 --netmask=255.255.255.0 --gateway=192.168.122.1 --nameserver=192.168.122.1
rootpw --iscrypted $1$osxvII91$h0GUDy5ST6KMHKKX15ZFh.
selinux --disabled
firewall --disabled
timezone America/New_York --isUtc
skipx
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto rhgb quiet"
autopart
zerombr
clearpart --all --initlabel --drives=vda
reboot

%packages
@core
%end

### Running Kojak Post Install
%post --log=/root/kickstart.log
set -x

LOG="/root/install.log"
TSTAMP=$(date '+_%Y%m%d%H%M%S')

create_profile() {
    echo "# Creating profile..." >> ${LOG}
    [[ -f /etc/profile.d/custom.sh ]] || cat > /etc/profile.d/custom.sh << 'EOF'
# Prompt colors
if [ `whoami` != "root" ]; then
    PS1='\[\e[32m\][\u@\h \W]\$\[\e[0m\] '
else
    PS1='\[\e[31m\][\u@\h \W]\$\[\e[0m\] '
fi

# Aliases
alias c='clear'
alias h='history'
alias m='less /var/log/messages'
alias l='ll -has '
alias n='netstat -vatulpn | grep'
alias p='ps -A | grep'
alias g='gvim'

# Configure bash history 
export HISTSIZE='1000000'
export HISTIGNORE=' *:&:?:??'
export HISTCONTROL='ignoreboth:erasedups'

# Configure tooling
export OPENSHIFT=/var/lib/openshift
export OPENSHIFT_VERSION=v1.2.1-5e723f6
export OPENSHIFT_SERVER=/opt/openshift-origin-server-${OPENSHIFT_VERSION}
export OPENSHIFT_CLIENT=/opt/openshift-origin-client-tools-${OPENSHIFT_VERSION}
export FABRIC8=/opt/gofabric8/
export HELM=/opt/helm/
export PATH=${OPENSHIFT}:${OPENSHIFT_SERVER}:${OPENSHIFT_CLIENT}:${FABRIC8}:${HELM}:${PATH}
export KUBECONFIG=${OPENSHIFT}/openshift.local.config/master/admin.kubeconfig
export CA_BUNDLE=${OPENSHIFT}/openshift.local.config/master/ca.crt
export KUBERNETES_DOMAIN=example.com

# Turn on bash history options
shopt -s histappend histreedit histverify

# Sync term history
history() {
  history_sync
  builtin history "$@"
}

history_sync() {
  builtin history -a         
  HISTFILESIZE=$HISTSIZE     
  builtin history -c         
  builtin history -r         
}

PROMPT_COMMAND=history_sync
EOF
}

download_autom8() {
    echo -e "# Downloading Autom8" >> ${LOG}
    yum -y install git patch
    mkdir /root/workspace
    git clone https://github.com/kojak/autom8 /root/workspace/autom8
}

install_docker() {
    echo -e "# Installing docker..." >> ${LOG}
    cat > /etc/yum.repos.d/docker.repo << 'EOF'
[docker-engine]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF

    yum -y install docker-engine
}

patch_docker() {
    echo -e "# Patching docker..." >> ${LOG} 
    [[ -f "/usr/lib/systemd/system/docker.service.orig" ]]; mv \
    /usr/lib/systemd/system/docker.service.orig /usr/lib/systemd/system/docker.service
    cp -p /usr/lib/systemd/system/docker.service /usr/lib/systemd/system/docker.service.orig
    cat > /tmp/docker.patch << 'EOF'
--- /usr/lib/systemd/system/docker.service    2016-07-27 19:35:00.000000000 -0400
+++ /usr/lib/systemd/system/docker.service    2016-07-30 18:53:27.739000000 -0400
@@ -8,7 +8,7 @@
 # the default is not to use systemd for cgroups because the delegate issues still
 # exists and systemd currently does not support the cgroup feature set required
 # for containers run by docker
-ExecStart=/usr/bin/dockerd
+ExecStart=/usr/bin/dockerd --insecure-registry=172.0.0.0/8
 ExecReload=/bin/kill -s HUP $MAINPID
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
EOF
    (cd / && patch -p0) < /tmp/docker.patch
    rm -f /tmp/docker.patch
}
    
initialise_docker() { 
    echo -e "# Initialising docker..." >> ${LOG}
    usermod -aG docker $(whoami)
    systemctl daemon-reload
    systemctl enable docker
    systemctl restart docker
}

create_profile
download_autom8
install_docker
patch_docker
initialise_docker

%end
